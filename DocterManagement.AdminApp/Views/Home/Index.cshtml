@using DoctorManagement.ViewModels.System.ActiveUsers
@using DoctorManagement.ViewModels.System.Doctors
@using Newtonsoft.Json
@using System.Net.Http
@using System.Text

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var countpatient = (StatisticCountActiveUser)ViewBag.ActiveUserRolePatient;
    var countservicefee= (StatisticCountActiveUser)ViewBag.StatisticServiceFee;
    var countdoctor = (StatisticCountActiveUser)ViewBag.ActiveUserRoleDoctor;
    var doctortoprating = (List<DoctorVm>)ViewBag.TopRateDoctor;
    var datetime = DateTime.Now;
}
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@section Header{
    <ol class="breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5">
        <li class="breadcrumb-item text-sm">
            <a class="opacity-3 text-dark" href="javascript:;">
                <svg width="12px" height="12px" class="mb-1" viewBox="0 0 45 40" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <title>Bác Sĩ </title>
                    <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g transform="translate(-1716.000000, -439.000000)" fill="#252f40" fill-rule="nonzero">
                            <g transform="translate(1716.000000, 291.000000)">
                                <g transform="translate(0.000000, 148.000000)">
                                    <path d="M46.7199583,10.7414583 L40.8449583,0.949791667 C40.4909749,0.360605034 39.8540131,0 39.1666667,0 L7.83333333,0 C7.1459869,0 6.50902508,0.360605034 6.15504167,0.949791667 L0.280041667,10.7414583 C0.0969176761,11.0460037 -1.23209662e-05,11.3946378 -1.23209662e-05,11.75 C-0.00758042603,16.0663731 3.48367543,19.5725301 7.80004167,19.5833333 L7.81570833,19.5833333 C9.75003686,19.5882688 11.6168794,18.8726691 13.0522917,17.5760417 C16.0171492,20.2556967 20.5292675,20.2556967 23.494125,17.5760417 C26.4604562,20.2616016 30.9794188,20.2616016 33.94575,17.5760417 C36.2421905,19.6477597 39.5441143,20.1708521 42.3684437,18.9103691 C45.1927731,17.649886 47.0084685,14.8428276 47.0000295,11.75 C47.0000295,11.3946378 46.9030823,11.0460037 46.7199583,10.7414583 Z"></path>
                                    <path d="M39.198,22.4912623 C37.3776246,22.4928106 35.5817531,22.0149171 33.951625,21.0951667 L33.92225,21.1107282 C31.1430221,22.6838032 27.9255001,22.9318916 24.9844167,21.7998837 C24.4750389,21.605469 23.9777983,21.3722567 23.4960833,21.1018359 L23.4745417,21.1129513 C20.6961809,22.6871153 17.4786145,22.9344611 14.5386667,21.7998837 C14.029926,21.6054643 13.533337,21.3722507 13.0522917,21.1018359 C11.4250962,22.0190609 9.63246555,22.4947009 7.81570833,22.4912623 C7.16510551,22.4842162 6.51607673,22.4173045 5.875,22.2911849 L5.875,44.7220845 C5.875,45.9498589 6.7517757,46.9451667 7.83333333,46.9451667 L19.5833333,46.9451667 L19.5833333,33.6066734 L27.4166667,33.6066734 L27.4166667,46.9451667 L39.1666667,46.9451667 C40.2482243,46.9451667 41.125,45.9498589 41.125,44.7220845 L41.125,22.2822926 C40.4887822,22.4116582 39.8442868,22.4815492 39.198,22.4912623 Z"></path>
                                </g>
                            </g>
                        </g>
                    </g>
                </svg>
            </a>
        </li>
        <li class="breadcrumb-item text-sm"><a class="opacity-5 text-dark" href="javascript:;">Trang chủ</a></li>
        <li class="breadcrumb-item text-sm text-dark active" aria-current="page">Thông kê trang chủ</li>
    </ol>
    <h6 class="font-weight-bolder mb-0">Trang chủ</h6>
}

<div class="container-fluid py-4">
  <div class="row">
    <div class="col-sm-4">
      <div class="card">
        <div class="card-body p-3 position-relative">
          <div class="row">
            <a class="col-7 text-start" asp-action="Index" asp-controller="User" asp-route-month="@datetime.ToString("MM")" asp-route-rolename="doctor"  asp-route-year="@datetime.Year" asp-route-check="month">
              <p class="text-sm mb-1 text-capitalize font-weight-bold">Bác sĩ đang hoạt động</p>
              <h5 class="font-weight-bolder mb-0">
                @countdoctor.countuserMonthNow
              </h5>
              <span class="text-sm text-end @countdoctor.change font-weight-bolder mt-auto mb-0">@(countdoctor.change.Contains("danger")?"-":"+")@countdoctor.percent% <span class="font-weight-normal text-secondary">kể từ tháng trước</span></span>
            </a>
            <div class="col-5">
              <div class="dropdown text-end">
                <a href="javascript:;" class="cursor-pointer text-secondary" id="dropdownUsers1" data-bs-toggle="dropdown" aria-expanded="false">
                  <span class="text-xs text-secondary">tháng @datetime.ToString("MM") - tháng @datetime.AddMonths(1).ToString("MM")</span>
                </a>
                @*<ul class="dropdown-menu dropdown-menu-end px-2 py-3" aria-labelledby="dropdownUsers1">
                  <li><a class="dropdown-item border-radius-md" href="javascript:;">Last 7 days</a></li>
                  <li><a class="dropdown-item border-radius-md" href="javascript:;">Last week</a></li>
                  <li><a class="dropdown-item border-radius-md" href="javascript:;">Last 30 days</a></li>
                </ul>*@
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-sm-4 mt-sm-0 mt-4">
      <div class="card">
        <div class="card-body p-3 position-relative">
          <div class="row">
            <a class="col-7 text-start" asp-action="Index" asp-controller="User" asp-route-month="@datetime.ToString("MM")" asp-route-rolename="patient"  asp-route-year="@datetime.Year" asp-route-check="month">
              <p class="text-sm mb-1 text-capitalize font-weight-bold">Bệnh nhân hoạt động</p>
              <h5 class="font-weight-bolder mb-0">
                @countpatient.countuserMonthNow
              </h5>
              <span class="text-sm text-end @countpatient.change font-weight-bolder mt-auto mb-0">@(countpatient.change.Contains("danger")?"-":"+")@countpatient.percent% <span class="font-weight-normal text-secondary">kể từ tháng trước</span></span>
            </a>
            <div class="col-5">
              <div class="dropdown text-end">
                <a href="javascript:;" class="cursor-pointer text-secondary" id="dropdownUsers2" data-bs-toggle="dropdown" aria-expanded="false">
                  <span class="text-xs text-secondary">tháng @datetime.ToString("MM") - tháng @datetime.AddMonths(1).ToString("MM")</span>
                </a>
               @* <ul class="dropdown-menu dropdown-menu-end px-2 py-3" aria-labelledby="dropdownUsers2">
                  <li><a class="dropdown-item border-radius-md" href="javascript:;">Last 7 days</a></li>
                  <li><a class="dropdown-item border-radius-md" href="javascript:;">Last week</a></li>
                  <li><a class="dropdown-item border-radius-md" href="javascript:;">Last 30 days</a></li>
                </ul>*@
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-sm-4 mt-sm-0 mt-4">
      <div class="card">
        <div class="card-body p-3 position-relative">
          <div class="row">
            <a class="col-7 text-start" asp-action="ServiceFeePaging" asp-controller="ServiceFee" asp-route-month="@datetime.ToString("MM")"  asp-route-year="@datetime.Year" asp-route-check="month">
              <p class="text-sm mb-1 text-capitalize font-weight-bold">Trung bình danh thu</p>
              <h5 class="font-weight-bolder mb-0">
                @countservicefee.countuserMonthNow
              </h5>
              <span class="font-weight-normal @countservicefee.change font-weight-bolder mt-auto mb-0">@(countservicefee.change.Contains("danger")?"-":"+")@countservicefee.percent%</span> kể từ tháng trước</span>
            </a>
            <div class="col-5">
              <div class="dropdown text-end">
                <a href="javascript:;" class="cursor-pointer text-secondary" id="dropdownUsers3" data-bs-toggle="dropdown" aria-expanded="false">
                  <span class="text-xs text-secondary">tháng @datetime.ToString("MM") - tháng @datetime.AddMonths(1).ToString("MM")</span>
                </a>
                @*<ul class="dropdown-menu dropdown-menu-end px-2 py-3" aria-labelledby="dropdownUsers3">
                  <li><a class="dropdown-item border-radius-md" href="javascript:;">Last 7 days</a></li>
                  <li><a class="dropdown-item border-radius-md" href="javascript:;">Last week</a></li>
                  <li><a class="dropdown-item border-radius-md" href="javascript:;">Last 30 days</a></li>
                </ul>*@
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="row mt-4">
    <div class="col-lg-4 col-sm-6">
      <div class="card h-100">
        <div class="card-header pb-0 p-3">
          <div class="d-flex justify-content-between">
            <h6 class="mb-0">Thống kê số lượng người dùng</h6>
            <button type="button" class="btn btn-rounded btn-outline-secondary mb-0 ms-2 btn-sm d-flex align-items-center justify-content-center" data-bs-toggle="tooltip" data-bs-placement="bottom" title="" >
              @ViewBag.Count 
            </button>
          </div>
        </div>
        <div class="card-body pb-0 p-3 mt-4">
          <div class="row">
            <div class="col-7 text-start">
              <div class="chart">
                <canvas id="chart-pie" class="chart-canvas" height="200"></canvas>
              </div>
            </div>
            <div class="col-5 my-auto">
              <span class="badge badge-md badge-dot me-4 d-block text-start">
                <i class="bg-info"></i>
                <span class="text-dark text-xs">Bác sĩ</span>
              </span>
              <span class="badge badge-md badge-dot me-4 d-block text-start">
                <i class="bg-primary"></i>
                <span class="text-dark text-xs">Quản trị</span>
              </span>
              <span class="badge badge-md badge-dot me-4 d-block text-start">
                <i class="bg-dark"></i>
                <span class="text-dark text-xs">Bệnh nhân</span>
              </span>
             
            </div>
          </div>
        </div>
        
      </div>
    </div>
    <div class="col-lg-8 col-sm-6 mt-sm-0 mt-4">
        <div class="card ">
        <div class="card-header pb-0 p-3">
          <div class="d-flex justify-content-between">
            <h6 class="mb-0">Thống kê độ tuổi bác sĩ</h6>
          </div>
        </div>
        <div class="card-body p-3">
          <div class="chart" id="chartget">
            <canvas id="chart-bar" class="chart-canvas" height="300"></canvas>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row mt-4">
    <div class="col-12">
      <div class="card mb-4">
        <div class="card-header pb-0">
          <h6>Bác sĩ đánh giá nhiều nhất</h6>
        </div>
        <div class="card-body px-0 pt-0 pb-2">
          @*<div class="table-responsive p-0">
            <table class="table align-items-center mb-0">
              <thead>
                <tr>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Product</th>
                  <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Value</th>
                  <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Ads Spent</th>
                  <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Refunds</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>
                    <div class="d-flex px-3 py-1">
                      <div>
                        <img src="https://raw.githubusercontent.com/creativetimofficial/public-assets/master/soft-ui-design-system/assets/img/ecommerce/blue-shoe.jpg" class="avatar me-3" alt="image">
                      </div>
                      <div class="d-flex flex-column justify-content-center">
                        <h6 class="mb-0 text-sm">Nike v22 Running</h6>
                        <p class="text-sm font-weight-bold text-secondary mb-0"><span class="text-success">8.232</span> orders</p>
                      </div>
                    </div>
                  </td>
                  <td>
                    <p class="text-sm font-weight-bold mb-0">$130.992</p>
                  </td>
                  <td class="align-middle text-center text-sm">
                    <p class="text-sm font-weight-bold mb-0">$9.500</p>
                  </td>
                  <td class="align-middle text-end">
                    <div class="d-flex px-3 py-1 justify-content-center align-items-center">
                      <p class="text-sm font-weight-bold mb-0">13</p>
                      <i class="ni ni-bold-down text-sm ms-1 mt-1 text-success"></i>
                      <button type="button" class="btn btn-sm btn-icon-only btn-rounded btn-outline-secondary mb-0 ms-2 btn-sm d-flex align-items-center justify-content-center ms-3" data-bs-toggle="tooltip" data-bs-placement="bottom" title="" data-bs-original-title="Refund rate is lower with 97% than other products">
                        <i class="fas fa-info" aria-hidden="true"></i>
                      </button>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td>
                    <div class="d-flex px-3 py-1">
                      <div>
                        <img src="https://raw.githubusercontent.com/creativetimofficial/public-assets/master/soft-ui-design-system/assets/img/ecommerce/black-mug.jpg" class="avatar me-3" alt="image">
                      </div>
                      <div class="d-flex flex-column justify-content-center">
                        <h6 class="mb-0 text-sm">Business Kit (Mug + Notebook)</h6>
                        <p class="text-sm font-weight-bold text-secondary mb-0"><span class="text-success">12.821</span> orders</p>
                      </div>
                    </div>
                  </td>
                  <td>
                    <p class="text-sm font-weight-bold mb-0">$80.250</p>
                  </td>
                  <td class="align-middle text-center text-sm">
                    <p class="text-sm font-weight-bold mb-0">$4.200</p>
                  </td>
                  <td class="align-middle text-end">
                    <div class="d-flex px-3 py-1 justify-content-center align-items-center">
                      <p class="text-sm font-weight-bold mb-0">40</p>
                      <i class="ni ni-bold-down text-sm ms-1 mt-1 text-success"></i>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td>
                    <div class="d-flex px-3 py-1">
                      <div>
                        <img src="https://raw.githubusercontent.com/creativetimofficial/public-assets/master/soft-ui-design-system/assets/img/ecommerce/black-chair.jpg" class="avatar me-3" alt="image">
                      </div>
                      <div class="d-flex flex-column justify-content-center">
                        <h6 class="mb-0 text-sm">Black Chair</h6>
                        <p class="text-sm font-weight-bold text-secondary mb-0"><span class="text-success">2.421</span> orders</p>
                      </div>
                    </div>
                  </td>
                  <td>
                    <p class="text-sm font-weight-bold mb-0">$40.600</p>
                  </td>
                  <td class="align-middle text-center text-sm">
                    <p class="text-sm font-weight-bold mb-0">$9.430</p>
                  </td>
                  <td class="align-middle text-end">
                    <div class="d-flex px-3 py-1 justify-content-center align-items-center">
                      <p class="text-sm font-weight-bold mb-0">54</p>
                      <i class="ni ni-bold-up text-sm ms-1 mt-1 text-danger"></i>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td>
                    <div class="d-flex px-3 py-1">
                      <div>
                        <img src="https://raw.githubusercontent.com/creativetimofficial/public-assets/master/soft-ui-design-system/assets/img/ecommerce/bang-sound.jpg" class="avatar me-3" alt="image">
                      </div>
                      <div class="d-flex flex-column justify-content-center">
                        <h6 class="mb-0 text-sm">Wireless Charger</h6>
                        <p class="text-sm font-weight-bold text-secondary mb-0"><span class="text-success">5.921</span> orders</p>
                      </div>
                    </div>
                  </td>
                  <td>
                    <p class="text-sm font-weight-bold mb-0">$91.300</p>
                  </td>
                  <td class="align-middle text-center text-sm">
                    <p class="text-sm font-weight-bold mb-0">$7.364</p>
                  </td>
                  <td class="align-middle text-end">
                    <div class="d-flex px-3 py-1 justify-content-center align-items-center">
                      <p class="text-sm font-weight-bold mb-0">5</p>
                      <i class="ni ni-bold-down text-sm ms-1 mt-1 text-success"></i>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td>
                    <div class="d-flex px-3 py-1">
                      <div>
                        <img src="https://raw.githubusercontent.com/creativetimofficial/public-assets/master/soft-ui-design-system/assets/img/ecommerce/photo-tools.jpg" class="avatar me-3" alt="image">
                      </div>
                      <div class="d-flex flex-column justify-content-center">
                        <h6 class="mb-0 text-sm">Mountain Trip Kit (Camera + Backpack)</h6>
                        <p class="text-sm font-weight-bold text-secondary mb-0"><span class="text-success">921</span> orders</p>
                      </div>
                    </div>
                  </td>
                  <td>
                    <p class="text-sm font-weight-bold mb-0">$140.925</p>
                  </td>
                  <td class="align-middle text-center text-sm">
                    <p class="text-sm font-weight-bold mb-0">$20.531</p>
                  </td>
                  <td class="align-middle text-end">
                    <div class="d-flex px-3 py-1 justify-content-center align-items-center">
                      <p class="text-sm font-weight-bold mb-0">121</p>
                      <i class="ni ni-bold-up text-sm ms-1 mt-1 text-danger"></i>
                      <button type="button" class="btn btn-sm btn-icon-only btn-rounded btn-outline-secondary mb-0 ms-2 btn-sm d-flex align-items-center justify-content-center ms-3" data-bs-toggle="tooltip" data-bs-placement="bottom" title="" data-bs-original-title="Refund rate is higher with 70% than other products">
                        <i class="fas fa-info" aria-hidden="true"></i>
                      </button>
                    </div>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>*@
         <div class="table table-responsive p-0">
            <table class="table align-items-center mb-0">
                <thead>
                    <tr>
                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Id</th>
                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Bác sĩ</th>
                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">E-mail</th>
                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Điện thoại</th>
                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Đánh giá</th>
                
                    </tr>
                </thead>
                <tbody>
                        @if(doctortoprating != null)
                        {
                            foreach(var item in doctortoprating.Take(10))
                            {
                            <tr>
                                <td class="align-middle text-center">
                                    <a class="text-secondary text-sm" asp-action="DetailtDoctor" asp-controller="User" asp-route-id="@item.UserId">@item.No</a>
                                </td>
                                <td>
                                    <a class="d-flex px-2 py-1" asp-action="DetailtDoctor" asp-controller="User" asp-route-id="@item.UserId">
                                        <div>
                                            <img class="avatar avatar-md me-3" src="@(Configuration["BaseAddress"] + "/img/" + item.Img)" alt="table image">
                                        </div>
                                        <div class="d-flex flex-column justify-content-center">
                                            <h6 class="mb-0 text-sm">@item.User.UserName</h6>
                                        </div>
                                    </a>
                                </td>
                                <td>
                                    <p class="text-sm text-secondary mb-0">@item.User.Email</p>
                                </td>
                                    <td>
                                    <p class="text-sm text-secondary mb-0">@item.User.PhoneNumber</p>
                                </td>
                                <td>
                                    <div class="rating ms-lg-n4">
                                            @for(var star = 1; star <=5; star++)
                                            {
                                                if(star+0.5<= item.Rating){ 
                                                    <i class="fas fa-star" aria-hidden="true"></i>
                                                }else if(star<= item.Rating){ 
                                                    <i class="fas fa-star-half-alt" aria-hidden="true"></i>
                                                }
                                                else
                                                {
                                                    <i class="fa fa-star-o" aria-hidden="true"></i>
                                                }
                                            }
                                
                                    </div>
                                </td>
                        
                               
                            </tr>
                            }
                        }
                </tbody>
            </table>
        </div>
        </div>
      </div>
    </div>
  </div>
  
</div>

@section jsFooter{
     <!-- Kanban scripts -->
    <script src="~/js/plugins/dragula/dragula.min.js"></script>
    <script src="~/js/plugins/jkanban/jkanban.js"></script>
    <script src="~/js/plugins/chartjs.min.js"></script>
    <script src="~/js/plugins/threejs.js"></script>
    <script src="~/js/plugins/orbit-controls.js"></script>
  <script>
    var ctx1 = document.getElementById("chart-bar").getContext("2d");
    var ctx2 = document.getElementById("chart-pie").getContext("2d");
   

    var gradientStroke1 = ctx1.createLinearGradient(0, 230, 0, 50);

    gradientStroke1.addColorStop(1, 'rgba(203,12,159,0.2)');
    gradientStroke1.addColorStop(0.2, 'rgba(72,72,176,0.0)');
    gradientStroke1.addColorStop(0, 'rgba(203,12,159,0)'); //purple colors

    var gradientStroke2 = ctx1.createLinearGradient(0, 230, 0, 50);

    gradientStroke2.addColorStop(1, 'rgba(20,23,39,0.2)');
    gradientStroke2.addColorStop(0.2, 'rgba(72,72,176,0.0)');
    gradientStroke2.addColorStop(0, 'rgba(20,23,39,0)'); //purple colors


    // Pie chart
    var userindex = @Html.Raw(ViewBag.User);
    var labeluser = []; 
    var datauser = [];        

    $.each(userindex, function (index, item) {        
         labeluser.push(item.Text);       
         datauser.push(item.Value) ;      
    }) 
    console.log(labeluser);
    console.log(datauser);
    new Chart(ctx2, {
      type: "pie",
      data: {
        labels:labeluser,
        datasets: [{
          label: "Projects",
          weight: 9,
          cutout: 0,
          tension: 0.9,
          pointRadius: 2,
          borderWidth: 2,
          backgroundColor: ['#17c1e8', '#cb0c9f', '#3A416F', '#a8b8d8'],
          data: datauser,
          fill: false
        }],
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: false,
          }
        },
        interaction: {
          intersect: false,
          mode: 'index',
        },
        scales: {
          y: {
            grid: {
              drawBorder: false,
              display: false,
              drawOnChartArea: false,
              drawTicks: false,
            },
            ticks: {
              display: false
            }
          },
          x: {
            grid: {
              drawBorder: false,
              display: false,
              drawOnChartArea: false,
              drawTicks: false,
            },
            ticks: {
              display: false,
            }
          },
        },
      },
    });
        var dateindex = @Html.Raw(ViewBag.Age);
        UserGetMonth(dateindex);
        function UserGetMonth(resp) {

            $("canvas#chart-bar").remove();
            $("#chartget").html('<canvas id="chart-bar" class="chart-canvas" height="300"></canvas>')

            var label = [];
            var data = [];

            $.each(resp, function (index, item) {
                label.push(item.date);
                data.push(item.qty)
            })
            console.log(label);
            console.log(data);
             var ctx3 = document.getElementById("chart-bar").getContext("2d");
             new Chart(ctx3, {
              type: "bar",
              data: {
                labels: label,
                datasets: [{
                  label: "patient by age",
                  weight: 5,
                  borderWidth: 0,
                  borderRadius: 4,
                  backgroundColor: '#3A416F',
                  data: data,
                  fill: false
                }],
              },
              options: {
                indexAxis: 'y',
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                  legend: {
                    display: false,
                  }
                },
                scales: {
                  y: {
                    grid: {
                      drawBorder: false,
                      display: true,
                      drawOnChartArea: true,
                      drawTicks: false,
                      borderDash: [5, 5]
                    },
                    ticks: {
                      display: true,
                      padding: 10,
                      color: '#9ca2b7'
                    }
                  },
                  x: {
                    grid: {
                      drawBorder: false,
                      display: false,
                      drawOnChartArea: true,
                      drawTicks: true,
                    },
                    ticks: {
                      display: true,
                      color: '#9ca2b7',
                      padding: 10
                    }
                  },
                },
              },
            });
        }
    // Bar chart
   
  </script>
   
    <script>
        

        if (document.getElementById('choices-month')) {
            var element = document.getElementById('choices-month');
            const example = new Choices(element, {
                searchEnabled: false
            });
        };
        if (document.getElementById('choices-year')) {
            var element = document.getElementById('choices-year');
            const example = new Choices(element, {
                searchEnabled: true
            });
        };
    </script>
   @* <script>
      
       var dateindex = @Html.Raw(ViewBag.date);
        UserGetMonth(dateindex);

        $("#choices-month").change(function () {
            var month = $(this).val();
            var year = $("#choices-year").val();
            $.get('/Home/GetMonth?month=' + month + '&year=' + year, function (resp) {
                UserGetMonth(resp);
            });
        });

        $("#choices-year").change(function () {
            var month = $("#choices-month").val();
            var year = $(this).val();
            $.get('/Home/GetMonth?month=' + month + '&year=' + year, function (resp) {
                UserGetMonth(resp);
            });
        });

        function UserGetMonth(resp) {

            $("canvas#chart-bars").remove();
            $("#chartget").html('<canvas id="chart-bars" class="chart-canvas" height="212" width="569" style = "display: block; box-sizing: border-box; height: 170px; width: 455.8px;" ></canvas >')

            var label = [];
            var data = [];

            $.each(resp, function (index, item) {
                label.push(item.date);
                data.push(item.count)
            })
            console.log(label);
            console.log(data);
            var ctx = document.getElementById("chart-bars").getContext("2d");


            new Chart(ctx, {
                type: "bar",
                data: {
                    labels: label,
                    datasets: [{
                        label: "Người dùng",
                        tension: 0.4,
                        borderWidth: 0,
                        borderRadius: 4,
                        borderSkipped: false,
                        backgroundColor: "#fff",
                        data: data,
                        maxBarThickness: 6
                    },],
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false,
                        }
                    },
                    interaction: {
                        intersect: false,
                        mode: 'index',
                    },
                    scales: {
                        y: {
                            grid: {
                                drawBorder: false,
                                display: false,
                                drawOnChartArea: false,
                                drawTicks: false,
                            },
                            ticks: {
                                suggestedMin: 0,
                             suggestedMax: 1000,
                                beginAtZero: true,
                                    padding: 15,
                                        font: {
                                    size: 14,
                                        family: "Open Sans",
                                            style: 'normal',
                                                lineHeight: 3
                                },
                                color: "#fff"
                            },
                                        },
                            x: {
                                grid: {
                                    drawBorder: false,
                                        display: false,
                                            drawOnChartArea: false,
                                                drawTicks: false
                                },
                                ticks: {
                                    display: false
                                },
                            },
                     },
                 },
             });
        }




        var ctx2 = document.getElementById("chart-line").getContext("2d");

        var gradientStroke1 = ctx2.createLinearGradient(0, 230, 0, 50);

        gradientStroke1.addColorStop(1, 'rgba(203,12,159,0.2)');
        gradientStroke1.addColorStop(0.2, 'rgba(72,72,176,0.0)');
        gradientStroke1.addColorStop(0, 'rgba(203,12,159,0)'); //purple colors

        var gradientStroke2 = ctx2.createLinearGradient(0, 230, 0, 50);

        gradientStroke2.addColorStop(1, 'rgba(20,23,39,0.2)');
        gradientStroke2.addColorStop(0.2, 'rgba(72,72,176,0.0)');
        gradientStroke2.addColorStop(0, 'rgba(20,23,39,0)'); //purple colors

        new Chart(ctx2, {
            type: "line",
            data: {
                labels: ["Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                datasets: [{
                    label: "Mobile apps",
                    tension: 0.4,
                    borderWidth: 0,
                    pointRadius: 0,
                    borderColor: "#cb0c9f",
                    borderWidth: 3,
                    backgroundColor: gradientStroke1,
                    fill: true,
                    data: [50, 40, 300, 220, 500, 250, 400, 230, 500],
                    maxBarThickness: 6

                },
                {
                    label: "Websites",
                    tension: 0.4,
                    borderWidth: 0,
                    pointRadius: 0,
                    borderColor: "#3A416F",
                    borderWidth: 3,
                    backgroundColor: gradientStroke2,
                    fill: true,
                    data: [30, 90, 40, 140, 290, 290, 340, 230, 400],
                    maxBarThickness: 6
                },
                ],
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false,
                    }
                },
                interaction: {
                    intersect: false,
                    mode: 'index',
                },
                scales: {
                    y: {
                        grid: {
                            drawBorder: false,
                            display: true,
                            drawOnChartArea: true,
                            drawTicks: false,
                            borderDash: [5, 5]
                        },
                        ticks: {
                            display: true,
                            padding: 10,
                            color: '#b2b9bf',
                            font: {
                                size: 11,
                                family: "Open Sans",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                    x: {
                        grid: {
                            drawBorder: false,
                            display: false,
                            drawOnChartArea: false,
                            drawTicks: false,
                            borderDash: [5, 5]
                        },
                        ticks: {
                            display: true,
                            color: '#b2b9bf',
                            padding: 20,
                            font: {
                                size: 11,
                                family: "Open Sans",
                                style: 'normal',
                                lineHeight: 2
                            },
                        }
                    },
                },
            },
        });


        (function () {
            const container = document.getElementById("globe");
            const canvas = container.getElementsByTagName("canvas")[0];

            const globeRadius = 100;
            const globeWidth = 4098 / 2;
            const globeHeight = 1968 / 2;

            function convertFlatCoordsToSphereCoords(x, y) {
                let latitude = ((x - globeWidth) / globeWidth) * -180;
                let longitude = ((y - globeHeight) / globeHeight) * -90;
                latitude = (latitude * Math.PI) / 180;
                longitude = (longitude * Math.PI) / 180;
                const radius = Math.cos(longitude) * globeRadius;

                return {
                    x: Math.cos(latitude) * radius,
                    y: Math.sin(longitude) * globeRadius,
                    z: Math.sin(latitude) * radius
                };
            }

            function makeMagic(points) {
                const {
                    width,
                    height
                } = container.getBoundingClientRect();

                // 1. Setup scene
                const scene = new THREE.Scene();
                // 2. Setup camera
                const camera = new THREE.PerspectiveCamera(45, width / height);
                // 3. Setup renderer
                const renderer = new THREE.WebGLRenderer({
                    canvas,
                    antialias: true
                });
                renderer.setSize(width, height);
                // 4. Add points to canvas
                // - Single geometry to contain all points.
                const mergedGeometry = new THREE.Geometry();
                // - Material that the dots will be made of.
                const pointGeometry = new THREE.SphereGeometry(0.5, 1, 1);
                const pointMaterial = new THREE.MeshBasicMaterial({
                    color: "#989db5",
                });

                for (let point of points) {
                    const {
                        x,
                        y,
                        z
                    } = convertFlatCoordsToSphereCoords(
                        point.x,
                        point.y,
                        width,
                        height
                    );

                    if (x && y && z) {
                        pointGeometry.translate(x, y, z);
                        mergedGeometry.merge(pointGeometry);
                        pointGeometry.translate(-x, -y, -z);
                    }
                }

                const globeShape = new THREE.Mesh(mergedGeometry, pointMaterial);
                scene.add(globeShape);

                container.classList.add("peekaboo");

                // Setup orbital controls
                camera.orbitControls = new THREE.OrbitControls(camera, canvas);
                camera.orbitControls.enableKeys = false;
                camera.orbitControls.enablePan = false;
                camera.orbitControls.enableZoom = false;
                camera.orbitControls.enableDamping = false;
                camera.orbitControls.enableRotate = true;
                camera.orbitControls.autoRotate = true;
                camera.position.z = -265;

                function animate() {
                    // orbitControls.autoRotate is enabled so orbitControls.update
                    // must be called inside animation loop.
                    camera.orbitControls.update();
                    requestAnimationFrame(animate);
                    renderer.render(scene, camera);
                }
                animate();
            }

            function hasWebGL() {
                const gl =
                    canvas.getContext("webgl") || canvas.getContext("experimental-webgl");
                if (gl && gl instanceof WebGLRenderingContext) {
                    return true;
                } else {
                    return false;
                }
            }

            function init() {
                if (hasWebGL()) {
                    window
                    window.fetch("https://raw.githubusercontent.com/creativetimofficial/public-assets/master/soft-ui-dashboard-pro/assets/js/points.json")
                        .then(response => response.json())
                        .then(data => {
                            makeMagic(data.points);
                        });
                }
            }
            init();
        })();
    </script>*@
}